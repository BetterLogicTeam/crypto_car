{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git\\\\crypto_car\\\\src\\\\components\\\\Mint\\\\PublicSaleMint.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PublicSale from \"./PublicSale\";\nimport PublicMint from \"./PublicMint\";\nimport { loadAccountAddress } from '../Api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PublicSaleMint() {\n  _s();\n\n  let [isDispaly, setIsDisplay] = useState(true);\n  let [txt, setTxt] = useState(\"\");\n\n  const getAccount = async () => {\n    try {\n      let acc = await loadAccountAddress();\n\n      if (acc == \"No Wallet\") {\n        setTxt(acc);\n        setIsDisplay(true);\n      } else if (acc == \"Connect to Rinkeby\") {\n        setTxt(acc);\n        setIsDisplay(true);\n      } else {\n        setIsDisplay(false);\n      }\n\n      console.log(acc);\n    } catch (e) {\n      console.log(\"error while get account\", e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isDispaly ? /*#__PURE__*/_jsxDEV(PublicSale, {\n      getAccount: getAccount,\n      txt: txt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(PublicMint, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PublicSaleMint, \"kCpPAJgi2Bf6MInAerpgoFCmdKY=\");\n\n_c = PublicSaleMint;\nexport default PublicSaleMint;\n\nvar _c;\n\n$RefreshReg$(_c, \"PublicSaleMint\");","map":{"version":3,"names":["React","useState","PublicSale","PublicMint","loadAccountAddress","PublicSaleMint","isDispaly","setIsDisplay","txt","setTxt","getAccount","acc","console","log","e"],"sources":["E:/Git/crypto_car/src/components/Mint/PublicSaleMint.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport PublicSale from \"./PublicSale\";\nimport PublicMint from \"./PublicMint\"\nimport {loadAccountAddress} from '../Api/Api'\n\nfunction PublicSaleMint() {\n    let [isDispaly, setIsDisplay] = useState(true);\n    let [txt, setTxt]=useState(\"\")\n\n    const getAccount=async()=>{\n        try{\n            let acc= await loadAccountAddress();\n            if(acc== \"No Wallet\"){\n                setTxt(acc);\n                setIsDisplay(true)\n            }else if(acc== \"Connect to Rinkeby\"){\n                setTxt(acc)\n                setIsDisplay(true)\n            }else{\n                setIsDisplay(false)\n            }\n            console.log(acc);\n\n        }catch(e){\n            console.log(\"error while get account\",e);\n        }\n    }\n    return (\n        <div>\n            {\n                isDispaly?\n                <PublicSale getAccount={getAccount} txt={txt} />\n                :\n                <PublicMint/>\n            }\n        </div>\n    )\n}\n\nexport default PublicSaleMint\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAAQC,kBAAR,QAAiC,YAAjC;;;AAEA,SAASC,cAAT,GAA0B;EAAA;;EACtB,IAAI,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAAxC;EACA,IAAI,CAACO,GAAD,EAAMC,MAAN,IAAcR,QAAQ,CAAC,EAAD,CAA1B;;EAEA,MAAMS,UAAU,GAAC,YAAS;IACtB,IAAG;MACC,IAAIC,GAAG,GAAE,MAAMP,kBAAkB,EAAjC;;MACA,IAAGO,GAAG,IAAG,WAAT,EAAqB;QACjBF,MAAM,CAACE,GAAD,CAAN;QACAJ,YAAY,CAAC,IAAD,CAAZ;MACH,CAHD,MAGM,IAAGI,GAAG,IAAG,oBAAT,EAA8B;QAChCF,MAAM,CAACE,GAAD,CAAN;QACAJ,YAAY,CAAC,IAAD,CAAZ;MACH,CAHK,MAGD;QACDA,YAAY,CAAC,KAAD,CAAZ;MACH;;MACDK,OAAO,CAACC,GAAR,CAAYF,GAAZ;IAEH,CAbD,CAaC,OAAMG,CAAN,EAAQ;MACLF,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCC,CAAtC;IACH;EACJ,CAjBD;;EAkBA,oBACI;IAAA,UAEQR,SAAS,gBACT,QAAC,UAAD;MAAY,UAAU,EAAEI,UAAxB;MAAoC,GAAG,EAAEF;IAAzC;MAAA;MAAA;MAAA;IAAA,QADS,gBAGT,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA;EALR;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GAhCQH,c;;KAAAA,c;AAkCT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}