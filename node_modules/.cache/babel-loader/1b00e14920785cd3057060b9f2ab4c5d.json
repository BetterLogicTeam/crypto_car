{"ast":null,"code":"import Web3 from \"web3\"; // import {abi, contract} from '../Utilies/Contract'\n\nlet accountAd; // const tokenContractOf = () => {\n//   let newContract = new window.web3.eth.Contract(abi, contract);\n//   return newContract;\n// };\n\nlet accounts;\n\nconst getAccounts = async () => {\n  const web3 = window.web3;\n\n  try {\n    accounts = await web3.eth.getAccounts();\n    return accounts;\n  } catch (error) {\n    console.log(\"Error while fetching acounts: \", error);\n    return null;\n  }\n};\n\nexport const loadAccountAddress = async () => {\n  let isConnected = false;\n\n  try {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum);\n      await window.ethereum.enable();\n      await window.web3.eth.getChainId((err, netId) => {\n        // console.log(\"networkId==>\", netId);\n        switch (netId.toString()) {\n          case \"4\":\n            // toast.success(\"Connected With Binance Main Network\")\n            isConnected = true;\n            break;\n\n          default:\n            isConnected = false;\n        }\n      });\n\n      if (isConnected == true) {\n        let accounts = await getAccounts();\n        return accounts[0];\n      } else {\n        return \"Connect to Rinkeby\";\n      }\n    } else {\n      let res = \"No Wallet\";\n      return res; //   console.log(\"No Wallet found!\");\n    }\n  } catch (error) {\n    let res = \"No Wallet\";\n    return res; // console.log(\"Error while loding web3\", error);\n  }\n};","map":{"version":3,"names":["Web3","accountAd","accounts","getAccounts","web3","window","eth","error","console","log","loadAccountAddress","isConnected","ethereum","enable","getChainId","err","netId","toString","res"],"sources":["E:/Git/crypto_car/src/components/Api/Api.js"],"sourcesContent":["import Web3 from \"web3\";\n// import {abi, contract} from '../Utilies/Contract'\nlet accountAd;\n\n// const tokenContractOf = () => {\n//   let newContract = new window.web3.eth.Contract(abi, contract);\n//   return newContract;\n// };\nlet accounts;\nconst getAccounts = async () => {\n  const web3 = window.web3;\n  try {\n    accounts = await web3.eth.getAccounts();\n    return accounts;\n  } catch (error) {\n    console.log(\"Error while fetching acounts: \", error);\n    return null;\n  }\n};\n\nexport const loadAccountAddress = async () => {\n  let isConnected = false;\n    try {\n        if (window.ethereum) {\n            window.web3 = new Web3(window.ethereum);\n            await window.ethereum.enable();\n           await window.web3.eth.getChainId((err, netId) => {\n                // console.log(\"networkId==>\", netId);\n                switch (netId.toString()) {\n                  case \"4\":\n                    // toast.success(\"Connected With Binance Main Network\")\n                    isConnected=true;\n                    break;\n                  default:\n                    isConnected=false;\n                }\n                \n                \n              }\n             );\n             if (isConnected == true) {    \n                let accounts = await getAccounts();\n                return accounts[0];\n                \n            }else{\n                return \"Connect to Rinkeby\"\n            }\n        } \n        else {\n            let res= \"No Wallet\";\n            return res;\n        //   console.log(\"No Wallet found!\");\n        }  \n    }catch (error) {\n        let res= \"No Wallet\";\n\n        return res\n        // console.log(\"Error while loding web3\", error);\n    }\n};\n"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB,C,CACA;;AACA,IAAIC,SAAJ,C,CAEA;AACA;AACA;AACA;;AACA,IAAIC,QAAJ;;AACA,MAAMC,WAAW,GAAG,YAAY;EAC9B,MAAMC,IAAI,GAAGC,MAAM,CAACD,IAApB;;EACA,IAAI;IACFF,QAAQ,GAAG,MAAME,IAAI,CAACE,GAAL,CAASH,WAAT,EAAjB;IACA,OAAOD,QAAP;EACD,CAHD,CAGE,OAAOK,KAAP,EAAc;IACdC,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,KAA9C;IACA,OAAO,IAAP;EACD;AACF,CATD;;AAWA,OAAO,MAAMG,kBAAkB,GAAG,YAAY;EAC5C,IAAIC,WAAW,GAAG,KAAlB;;EACE,IAAI;IACA,IAAIN,MAAM,CAACO,QAAX,EAAqB;MACjBP,MAAM,CAACD,IAAP,GAAc,IAAIJ,IAAJ,CAASK,MAAM,CAACO,QAAhB,CAAd;MACA,MAAMP,MAAM,CAACO,QAAP,CAAgBC,MAAhB,EAAN;MACD,MAAMR,MAAM,CAACD,IAAP,CAAYE,GAAZ,CAAgBQ,UAAhB,CAA2B,CAACC,GAAD,EAAMC,KAAN,KAAgB;QAC5C;QACA,QAAQA,KAAK,CAACC,QAAN,EAAR;UACE,KAAK,GAAL;YACE;YACAN,WAAW,GAAC,IAAZ;YACA;;UACF;YACEA,WAAW,GAAC,KAAZ;QANJ;MAUD,CAZE,CAAN;;MAcE,IAAIA,WAAW,IAAI,IAAnB,EAAyB;QACtB,IAAIT,QAAQ,GAAG,MAAMC,WAAW,EAAhC;QACA,OAAOD,QAAQ,CAAC,CAAD,CAAf;MAEH,CAJA,MAII;QACD,OAAO,oBAAP;MACH;IACJ,CAxBD,MAyBK;MACD,IAAIgB,GAAG,GAAE,WAAT;MACA,OAAOA,GAAP,CAFC,CAGL;IACC;EACJ,CA/BD,CA+BC,OAAOX,KAAP,EAAc;IACX,IAAIW,GAAG,GAAE,WAAT;IAEA,OAAOA,GAAP,CAHW,CAIX;EACH;AACJ,CAvCM"},"metadata":{},"sourceType":"module"}