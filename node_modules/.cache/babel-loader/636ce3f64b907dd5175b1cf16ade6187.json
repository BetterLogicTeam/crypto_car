{"ast":null,"code":"var _jsxFileName = \"E:\\\\Git\\\\crypto_car\\\\src\\\\components\\\\Mint\\\\PreSaleMint.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Mint from './Minnt';\nimport SecondMinnt from './SecondMinnt';\nimport { loadAccountAddress } from '../Api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction PreSaleMint() {\n  _s();\n\n  let [isDisplay, setIsDisplay] = useState(true);\n  let [txt, setTxt] = useState(\"\");\n\n  const getAccount = async () => {\n    try {\n      let acc = await loadAccountAddress();\n\n      if (acc == \"No Wallet\") {\n        setTxt(acc);\n        setIsDisplay(true);\n      } else if (acc == \"Connect to Rinkeby\") {\n        setTxt(acc);\n        setIsDisplay(true);\n      } else {\n        setIsDisplay(false);\n      }\n\n      console.log(acc);\n    } catch (e) {\n      console.log(\"error while get account\", e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isDisplay ? /*#__PURE__*/_jsxDEV(Mint, {\n      getAccount: getAccount,\n      txt: txt\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(SecondMinnt, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(PreSaleMint, \"DnvYbKR5UC1CkZqLiGZ5z104EoI=\");\n\n_c = PreSaleMint;\nexport default PreSaleMint;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreSaleMint\");","map":{"version":3,"names":["React","useState","Mint","SecondMinnt","loadAccountAddress","PreSaleMint","isDisplay","setIsDisplay","txt","setTxt","getAccount","acc","console","log","e"],"sources":["E:/Git/crypto_car/src/components/Mint/PreSaleMint.jsx"],"sourcesContent":["import React,{useState} from 'react'\nimport Mint from './Minnt'\nimport SecondMinnt from './SecondMinnt';\nimport {loadAccountAddress} from '../Api/Api'\nfunction PreSaleMint() {\n    let [isDisplay, setIsDisplay]=useState(true)\n    let [txt, setTxt]=useState(\"\")\n\n    const getAccount=async()=>{\n        try{\n            let acc= await loadAccountAddress();\n            if(acc== \"No Wallet\"){\n                setTxt(acc);\n                setIsDisplay(true)\n            }else if(acc== \"Connect to Rinkeby\"){\n                setTxt(acc)\n                setIsDisplay(true)\n            }else{\n                setIsDisplay(false)\n            }\n            console.log(acc);\n\n        }catch(e){\n            console.log(\"error while get account\",e);\n        }\n    }\n    return (\n        <div>\n            {\nisDisplay ? \n<Mint  getAccount={getAccount} txt={txt} />\n:\n<SecondMinnt/>\n            }\n        </div>\n    )\n}\n\nexport default PreSaleMint\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,kBAAR,QAAiC,YAAjC;;;AACA,SAASC,WAAT,GAAuB;EAAA;;EACnB,IAAI,CAACC,SAAD,EAAYC,YAAZ,IAA0BN,QAAQ,CAAC,IAAD,CAAtC;EACA,IAAI,CAACO,GAAD,EAAMC,MAAN,IAAcR,QAAQ,CAAC,EAAD,CAA1B;;EAEA,MAAMS,UAAU,GAAC,YAAS;IACtB,IAAG;MACC,IAAIC,GAAG,GAAE,MAAMP,kBAAkB,EAAjC;;MACA,IAAGO,GAAG,IAAG,WAAT,EAAqB;QACjBF,MAAM,CAACE,GAAD,CAAN;QACAJ,YAAY,CAAC,IAAD,CAAZ;MACH,CAHD,MAGM,IAAGI,GAAG,IAAG,oBAAT,EAA8B;QAChCF,MAAM,CAACE,GAAD,CAAN;QACAJ,YAAY,CAAC,IAAD,CAAZ;MACH,CAHK,MAGD;QACDA,YAAY,CAAC,KAAD,CAAZ;MACH;;MACDK,OAAO,CAACC,GAAR,CAAYF,GAAZ;IAEH,CAbD,CAaC,OAAMG,CAAN,EAAQ;MACLF,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAsCC,CAAtC;IACH;EACJ,CAjBD;;EAkBA,oBACI;IAAA,UAERR,SAAS,gBACT,QAAC,IAAD;MAAO,UAAU,EAAEI,UAAnB;MAA+B,GAAG,EAAEF;IAApC;MAAA;MAAA;MAAA;IAAA,QADS,gBAGT,QAAC,WAAD;MAAA;MAAA;MAAA;IAAA;EALQ;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH;;GAhCQH,W;;KAAAA,W;AAkCT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}